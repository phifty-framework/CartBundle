// Generated by CoffeeScript 1.7.1
(function() {
  $(function() {
    var $cartSummary, $couponInput, $discountAmount, $discountedSummary, $discountedTotalAmount, $shippingFee, $totalAmount, updateCartDetails;
    updateCartDetails = function(summary) {
      if (!summary || !summary.total_amount) {
        return;
      }
      $totalAmount.text("NT$ " + summary.total_amount);
      $shippingFee.text("NT$ " + summary.shipping_fee);
      $discountAmount.text("NT$ " + summary.discount_amount);
      $discountedTotalAmount.text("NT$ " + summary.discounted_total_amount);
      if (summary.discounted_total_amount !== summary.total_amount) {
        $totalAmount.parent().addClass("line-through");
        return $discountedSummary.removeClass("hide");
      } else {
        $totalAmount.parent().removeClass("line-through");
        $discountedSummary.addClass("hide");
        return $couponInput.val("");
      }
    };
    $cartSummary = $(".cart-summary");
    $totalAmount = $(".total-amount");
    $discountedTotalAmount = $(".discounted-total-amount");
    $discountAmount = $(".discount-amount");
    $discountedSummary = $(".discounted-summary");
    $shippingFee = $(".shipping-cost");
    $couponInput = $(".coupon-code");
    $(document.body).on("change", ".quantity-selector", function() {
      var $amount, $el, $row, id, quantity;
      $el = $(this);
      $row = $el.parents("tr");
      $amount = $row.find(".amount");
      id = $el.data("id");
      quantity = $el.val();
      return runAction("CartBundle::Action::UpdateCartItem", {
        id: id,
        quantity: quantity
      }, function(resp) {
        if (resp.success) {
          $amount.text("$ " + resp.data.amount);
          if (resp.data) {
            return updateCartDetails(resp.data);
          }
        }
      });
    });
    $(document.body).on("click", ".coupon-submit-btn", function() {
      var couponCode;
      couponCode = $(".coupon-code").val();
      return runAction("CartBundle::Action::ApplyCoupon", {
        coupon_code: couponCode
      }, function(resp) {
        if (resp.success) {
          $.jGrowl(resp.message);
          return updateCartDetails(resp.data);
        } else {
          updateCartDetails(resp.data);
          $couponInput.val("");
          return $.jGrowl(resp.message, {
            theme: "error"
          });
        }
      });
    });
    return $(document.body).on("click", ".remove-cart-item", function() {
      var $el, itemId;
      $el = $(this);
      itemId = $(this).data("id");
      return runAction("CartBundle::Action::RemoveCartItem", {
        id: itemId
      }, function(resp) {
        if (resp.success) {
          $el.parents("tr").fadeOut();
          return updateCartDetails(resp.data);
        }
      });
    });
  });


  /*
  updateQuantitySelector = (typeId) ->
    $quantitySel = $(".quantity").empty()
    return  unless typeId
    ProductAPI.getType typeId, (productType) ->
      quantity = parseInt(productType.quantity)
      if quantity > 9
        quantity = 9
      else quantity = 9  if quantity is -1
      i = 1
  
      while i <= quantity
        $("<option/>").text(i).val(i).appendTo $quantitySel
        i++
  
   * when product type changed, we should also update the quantity
  $(".product-type").change ->
    updateQuantitySelector $(this).val()
  updateQuantitySelector $(".product-type").val()
   */

}).call(this);
